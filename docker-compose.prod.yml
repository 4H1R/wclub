services:
  pgsql:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - pgsql-data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      PGPASSWORD: '${DB_PASSWORD}'
    networks:
      - wclub
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - '${DB_DATABASE}'
        - '-U'
        - '${DB_USERNAME}'
      retries: 3
      timeout: 5s
  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - wclub
    volumes:
      - redis-data:/data
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s
  api:
    restart: unless-stopped
    build:
      context: .
      dockerfile: api.dockerfile
    networks:
      - wclub
    environment:
      - CONTAINER_MODE=http
      - WITH_HORIZON=true
      - WITH_SCHEDULER=true
      - WITH_SSR=true
    env_file:
      - .env
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - pgsql
      - redis
  api-fallback:
    restart: unless-stopped
    build:
      context: .
      dockerfile: api.dockerfile
    networks:
      - wclub
    environment:
      - CONTAINER_MODE=http
    env_file:
      - .env
    ports:
      - "127.0.0.1:8001:8000"
    depends_on:
      - pgsql
      - redis

volumes:
  storage:
  pgsql-data:
  redis-data:


networks:
  wclub:
    name: wclub
    external: true
